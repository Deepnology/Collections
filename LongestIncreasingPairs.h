/*Greedy*DP*/
#ifndef LONGEST_INCREASING_PAIRS_H
#define LONGEST_INCREASING_PAIRS_H
#include <vector>
#include <sstream>
#include <iostream>
#include <string>
#include <unordered_map>
#include <algorithm>
#include "Debug.h"
#include "LISPairs.h"
/*
1.
Cracking the coding interview: Sorting and Searching
Given a list of pairs of integers.
Find the longest sequence of pairs where both the first elements and the second elements in the pairs are in increasing order, respectively.
The original order of pairs doesn't need to maintain.

2.
Elements of programming interview, DynamicProgramming: Find the longest nondecreasing subsequence, variant
Define a sequence of points in the plane to be ascending if each point is above and to the right of the previous point.
How would you find a maximum ascending subset of a set of points in the plane?
The original order of pairs doesn't need to maintain.

3. Building bridge problem
http://stackoverflow.com/questions/7288585/building-bridges-problem-how-to-apply-longest-increasing-subsequence
http://www.geeksforgeeks.org/dynamic-programming-set-14-variations-of-lis/
Consider a 2-D map with a horizontal river passing through its center.
There are n cities on the southern bank with x-coordinates a(1) ... a(n) and n cities on the northern bank with x-coordinates b(1) ... b(n).
You want to connect as many north-south pairs of cities as possible with bridges such that no two bridges cross.
When connecting cities, you can only connect city i on the northern bank to city i on the southern bank.

8     1     4     3     5     2     6     7
<---- Cities on the other bank of river---->
--------------------------------------------
	<--------------- River--------------->
--------------------------------------------
1     2     3     4     5     6     7     8
<------- Cities on one bank of river------->

The sourth bank cities are sorted, just need to find the LIS of the north bank cities.

4. Leetcode: Russian Doll Envelopes
You have a number of envelopes with widths and heights given as a pair of integers (w, h).
One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.
What is the maximum number of envelopes can you Russian doll? (put one inside other)
Example:
Given envelopes = [[5,4],[6,4],[6,7],[2,3]], the maximum number of envelopes you can Russian doll is 3 ([2,3] => [5,4] => [6,7]).


Solution:
1. sort the array based on the first elements: O(nlogn) time
2. find the longest increasing subsequence of pairs:
Greedy_LowerBound: O(nlogn) time, O(n) space (still not working)
DP1D_Quadratic: O(n^2) time, O(n) space
*/
class LongestIncreasingPairs
{
public:
	LongestIncreasingPairs(){}
	~LongestIncreasingPairs(){}

	//this method is working now !!! pay attention to the comparison of the second element in sort
	int Len_Greedy_LowerBound(std::vector<std::pair<int, int>> && A)
	{
		int N = A.size();
		//1. sort the array based on the first elements
		std::sort(A.begin(), A.end(), [](const std::pair<int, int> & a, const std::pair<int, int> & b)->bool
		{
			return a.first != b.first ? a.first < b.first : a.second > b.second;//sort seconds in decreasing order for equal firsts !!!
		});
		//2. find the longest increasing subsequence of the second elements
		std::vector<std::pair<int, int>> sorted;
		for (int i = 0; i < N; ++i)
		{
			std::vector<std::pair<int, int> >::iterator lb = std::lower_bound(sorted.begin(), sorted.end(), A[i], [](const std::pair<int, int> & a, const std::pair<int, int> & b)->bool
			{
				return a.first < b.first && a.second < b.second;//strickly increasing for both first and second
			});

			if (lb == sorted.end())
				sorted.push_back(A[i]);
			else
				*lb = A[i];

			std::cout << "sorted: " << Debug::ToStr1D<int>()(sorted) << std::endl;
		}
		int res = sorted.size();
		std::cout << "LongestIncreasingPairs Len_Greedy_LowerBound for \"" << Debug::ToStr1D<int>()(A) << "\": " << res << std::endl;
		return res;
	}

	int Len_DP1D_Quadratic(std::vector<std::pair<int, int>> && v)
	{
		std::cout << "LongestIncreasingPairs Len_DP1D_Quadratic for \"" << Debug::ToStr1D<int>()(v) << "\": see LISPairs.Len_DP1D_Quadratic:" << std::endl;

		//sort by the first elements
		std::sort(v.begin(), v.end(), [](const std::pair<int, int> & a, const std::pair<int, int> & b)->bool
		{
			return a.first != b.first ? a.first < b.first : a.second > b.second;//sort seconds in decreasing order for equal firsts !!!
		});
		return LISPairs().Len_DP1D_Quadratic(v);
	}
};
/*
LongestIncreasingPairs===>
sorted: [-5,-3]
sorted: [-5,-3], [-4,-1]
sorted: [-5,-3], [-4,-1], [-3,0]
sorted: [-5,-3], [-4,-1], [-3,0], [-2,1]
sorted: [-5,-3], [-4,-1], [-3,0], [-2,1], [-1,3]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [-1,3]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [-1,3], [2,5]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [3,3], [2,5]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [3,3], [2,5], [4,6]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [3,3], [2,5], [4,6], [5,7]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [3,3], [5,4], [4,6], [5,7]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [3,3], [5,4], [4,6], [5,7], [6,8]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [3,3], [5,4], [4,6], [6,7], [6,8]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [3,3], [5,4], [4,6], [6,7], [6,8], [7,9]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [3,3], [5,4], [7,5], [6,7], [6,8], [7,9]
sorted: [-5,-3], [-4,-1], [1,0], [-2,1], [8,3], [5,4], [7,5], [6,7], [6,8], [7,9]
LongestIncreasingPairs Len_Greedy_LowerBound for "[-5,-3], [-4,-1], [-3,0], [-2,1], [-1,3], [1,0], [2,5], [3,3], [4,6], [5,7], [5,4], [6,8], [6,7], [7,9], [7,5], [8,3]": 10
LongestIncreasingPairs Len_DP1D_Quadratic for "[3,3], [1,0], [5,4], [7,5], [6,7], [8,3], [2,5], [-5,-3], [4,6], [-4,-1], [5,7], [-3,0], [6,8], [-2,1], [7,9], [-1,3]": see LISPairs.Len_DP1D_Quadratic:
1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 5, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 5, 3, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 5, 3, 6, 5, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 5, 3, 6, 5, 7, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 5, 3, 6, 5, 7, 8, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 5, 3, 6, 5, 7, 8, 6, 1, 1, 1, 1, 1
1, 2, 3, 4, 5, 3, 6, 5, 7, 8, 6, 9, 1, 1, 1, 1
1, 2, 3, 4, 5, 3, 6, 5, 7, 8, 6, 9, 8, 1, 1, 1
1, 2, 3, 4, 5, 3, 6, 5, 7, 8, 6, 9, 8, 10, 1, 1
1, 2, 3, 4, 5, 3, 6, 5, 7, 8, 6, 9, 8, 10, 7, 1
1, 2, 3, 4, 5, 3, 6, 5, 7, 8, 6, 9, 8, 10, 7, 5
LISPairs Len_DP1D_Quadratic for "[-5,-3], [-4,-1], [-3,0], [-2,1], [-1,3], [1,0], [2,5], [3,3], [4,6], [5,7], [5,4], [6,8], [6,7], [7,9], [7,5], [8,3]": 10 ([-5,-3], [-4,-1], [-3,0], [-2,1], [-1,3], [2,5], [4,6], [5,7], [6,8], [7,9])
sorted: [1,3]
sorted: [1,2]
sorted: [1,2], [2,3]
sorted: [1,2], [2,3], [4,7]
sorted: [1,2], [2,3], [4,6]
sorted: [1,2], [2,3], [4,6]
sorted: [1,2], [2,3], [4,5]
sorted: [1,2], [2,3], [4,5], [5,6]
sorted: [1,2], [2,3], [4,5], [5,6], [6,7]
sorted: [1,2], [2,3], [4,5], [5,6], [6,7], [10,32]
sorted: [1,2], [2,3], [4,5], [5,6], [6,7], [10,12]
sorted: [1,2], [2,3], [4,5], [5,6], [6,7], [10,12], [12,32]
LongestIncreasingPairs Len_Greedy_LowerBound for "[1,3], [1,2], [2,3], [4,7], [4,6], [4,6], [4,5], [5,6], [6,7], [10,32], [10,12], [12,32]": 7
LongestIncreasingPairs Len_DP1D_Quadratic for "[1,2], [1,3], [2,3], [4,5], [4,6], [4,6], [4,7], [5,6], [6,7], [10,12], [10,32], [12,32]": see LISPairs.Len_DP1D_Quadratic:
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 3, 3, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 3, 3, 3, 1, 1, 1, 1, 1
1, 1, 2, 3, 3, 3, 3, 4, 1, 1, 1, 1
1, 1, 2, 3, 3, 3, 3, 4, 5, 1, 1, 1
1, 1, 2, 3, 3, 3, 3, 4, 5, 6, 1, 1
1, 1, 2, 3, 3, 3, 3, 4, 5, 6, 6, 1
1, 1, 2, 3, 3, 3, 3, 4, 5, 6, 6, 7
LISPairs Len_DP1D_Quadratic for "[1,3], [1,2], [2,3], [4,7], [4,6], [4,6], [4,5], [5,6], [6,7], [10,32], [10,12], [12,32]": 7 ([1,2], [2,3], [4,5], [5,6], [6,7], [10,12], [12,32])
sorted: [2,95]
sorted: [15,37]
sorted: [15,37], [25,88]
sorted: [25,23], [25,88]
sorted: [25,23], [30,36]
sorted: [25,23], [30,36], [32,73]
sorted: [25,23], [30,36], [32,73], [42,81]
sorted: [25,23], [30,36], [43,71], [42,81]
sorted: [25,23], [30,36], [48,51], [42,81]
sorted: [62,2], [30,36], [48,51], [42,81]
sorted: [62,2], [30,36], [68,37], [42,81]
sorted: [62,2], [69,28], [68,37], [42,81]
sorted: [71,0], [69,28], [68,37], [42,81]
sorted: [71,0], [69,28], [68,37], [42,81], [73,89]
sorted: [71,0], [76,18], [68,37], [42,81], [73,89]
sorted: [71,0], [76,18], [68,37], [78,73], [73,89]
sorted: [71,0], [76,18], [79,27], [78,73], [73,89]
sorted: [71,0], [76,18], [79,27], [89,64], [73,89]
sorted: [71,0], [76,18], [79,27], [89,64], [97,66]
sorted: [71,0], [76,18], [97,22], [89,64], [97,66]
LongestIncreasingPairs Len_Greedy_LowerBound for "[2,95], [15,37], [25,88], [25,23], [30,36], [32,73], [42,81], [43,71], [48,51], [62,2], [68,37], [69,28], [71,0], [73,89], [76,18], [78,73], [79,27], [89,64], [97,66], [97,22]": 5
LongestIncreasingPairs Len_DP1D_Quadratic for "[2,95], [15,37], [25,88], [25,23], [30,36], [32,73], [42,81], [43,71], [48,51], [62,2], [68,37], [69,28], [71,0], [73,89], [76,18], [78,73], [79,27], [89,64], [97,66], [97,22]": see LISPairs.Len_DP1D_Quadratic:
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 5, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 5, 2, 1, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 5, 2, 4, 1, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 5, 2, 4, 3, 1, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 5, 2, 4, 3, 4, 1, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 5, 2, 4, 3, 4, 5, 1
1, 1, 2, 1, 2, 3, 4, 3, 3, 1, 3, 2, 1, 5, 2, 4, 3, 4, 5, 3
LISPairs Len_DP1D_Quadratic for "[2,95], [15,37], [25,88], [25,23], [30,36], [32,73], [42,81], [43,71], [48,51], [62,2], [68,37], [69,28], [71,0], [73,89], [76,18], [78,73], [79,27], [89,64], [97,66], [97,22]": 5 ([25,23], [30,36], [32,73], [42,81], [73,89])
sorted: [1,33]
sorted: [2,16]
sorted: [2,16], [4,49]
sorted: [2,16], [10,37]
sorted: [2,16], [10,37], [19,79]
sorted: [2,16], [10,37], [19,79], [31,80]
sorted: [2,16], [10,37], [37,53], [31,80]
sorted: [2,16], [10,37], [41,45], [31,80]
sorted: [49,0], [10,37], [41,45], [31,80]
sorted: [49,0], [10,37], [41,45], [55,54]
sorted: [49,0], [10,37], [41,45], [55,54], [56,96]
sorted: [49,0], [10,37], [41,45], [55,54], [57,85]
sorted: [49,0], [10,37], [41,45], [65,47], [57,85]
sorted: [49,0], [10,37], [41,45], [65,47], [57,85], [67,99]
sorted: [49,0], [10,37], [41,45], [65,47], [68,82], [67,99]
sorted: [49,0], [10,37], [41,45], [65,47], [69,76], [67,99]
sorted: [49,0], [74,35], [41,45], [65,47], [69,76], [67,99]
sorted: [49,0], [90,10], [41,45], [65,47], [69,76], [67,99]
sorted: [49,0], [90,10], [91,27], [65,47], [69,76], [67,99]
sorted: [49,0], [90,10], [96,26], [65,47], [69,76], [67,99]
LongestIncreasingPairs Len_Greedy_LowerBound for "[1,33], [2,16], [4,49], [10,37], [19,79], [31,80], [37,53], [41,45], [49,0], [55,54], [56,96], [57,85], [65,47], [67,99], [68,82], [69,76], [74,35], [90,10], [91,27], [96,26]": 6
LongestIncreasingPairs Len_DP1D_Quadratic for "[1,33], [2,16], [4,49], [10,37], [19,79], [31,80], [37,53], [41,45], [49,0], [55,54], [56,96], [57,85], [65,47], [67,99], [68,82], [69,76], [74,35], [90,10], [91,27], [96,26]": see LISPairs.Len_DP1D_Quadratic:
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 4, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 4, 6, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 4, 6, 5, 1, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 4, 6, 5, 5, 1, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 4, 6, 5, 5, 2, 1, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 4, 6, 5, 5, 2, 2, 1, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 4, 6, 5, 5, 2, 2, 3, 1
1, 1, 2, 2, 3, 4, 3, 3, 1, 4, 5, 5, 4, 6, 5, 5, 2, 2, 3, 3
LISPairs Len_DP1D_Quadratic for "[1,33], [2,16], [4,49], [10,37], [19,79], [31,80], [37,53], [41,45], [49,0], [55,54], [56,96], [57,85], [65,47], [67,99], [68,82], [69,76], [74,35], [90,10], [91,27], [96,26]": 6 ([1,33], [4,49], [19,79], [31,80], [56,96], [67,99])
sorted: [5,5]
sorted: [5,5], [8,9]
sorted: [5,5], [8,9], [10,59]
sorted: [5,5], [8,9], [10,53]
sorted: [5,5], [8,9], [10,53], [20,94]
sorted: [5,5], [8,9], [10,53], [22,57]
sorted: [5,5], [8,9], [26,29], [22,57]
sorted: [26,3], [8,9], [26,29], [22,57]
sorted: [26,3], [8,9], [26,29], [22,57], [28,89]
sorted: [26,3], [8,9], [26,29], [22,57], [28,89], [34,96]
sorted: [26,3], [8,9], [26,29], [22,57], [28,89], [39,93]
sorted: [26,3], [8,9], [26,29], [47,45], [28,89], [39,93]
sorted: [26,3], [8,9], [26,29], [47,45], [60,56], [39,93]
sorted: [26,3], [67,7], [26,29], [47,45], [60,56], [39,93]
sorted: [26,3], [67,7], [26,29], [47,45], [60,56], [69,71]
sorted: [26,3], [67,7], [26,29], [47,45], [74,54], [69,71]
sorted: [26,3], [67,7], [26,29], [47,45], [74,54], [80,71]
sorted: [26,3], [67,7], [82,23], [47,45], [74,54], [80,71]
sorted: [26,3], [67,7], [82,23], [47,45], [74,54], [86,55]
sorted: [26,3], [67,7], [82,23], [95,26], [74,54], [86,55]
LongestIncreasingPairs Len_Greedy_LowerBound for "[5,5], [8,9], [10,59], [10,53], [20,94], [22,57], [26,29], [26,3], [28,89], [34,96], [39,93], [47,45], [60,56], [67,7], [69,71], [74,54], [80,71], [82,23], [86,55], [95,26]": 6
LongestIncreasingPairs Len_DP1D_Quadratic for "[5,5], [8,9], [10,59], [10,53], [20,94], [22,57], [26,29], [26,3], [28,89], [34,96], [39,93], [47,45], [60,56], [67,7], [69,71], [74,54], [80,71], [82,23], [86,55], [95,26]": see LISPairs.Len_DP1D_Quadratic:
1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 5, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 5, 2, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 5, 2, 6, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 5, 2, 6, 5, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 5, 2, 6, 5, 6, 1, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 5, 2, 6, 5, 6, 3, 1, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 5, 2, 6, 5, 6, 3, 6, 1
1, 2, 3, 3, 4, 4, 3, 1, 5, 6, 6, 4, 5, 2, 6, 5, 6, 3, 6, 4
LISPairs Len_DP1D_Quadratic for "[5,5], [8,9], [10,59], [10,53], [20,94], [22,57], [26,29], [26,3], [28,89], [34,96], [39,93], [47,45], [60,56], [67,7], [69,71], [74,54], [80,71], [82,23], [86,55], [95,26]": 6 ([5,5], [8,9], [10,53], [22,57], [28,89], [34,96])
sorted: [9,61]
sorted: [19,34]
sorted: [19,34], [25,48]
sorted: [19,34], [25,48], [29,88]
sorted: [36,34], [25,48], [29,88]
sorted: [36,34], [25,48], [29,88], [45,95]
sorted: [45,2], [25,48], [29,88], [45,95]
sorted: [46,1], [25,48], [29,88], [45,95]
sorted: [46,1], [25,48], [49,61], [45,95]
sorted: [46,1], [49,48], [49,61], [45,95]
sorted: [46,1], [49,48], [49,61], [53,88]
sorted: [46,1], [64,47], [49,61], [53,88]
sorted: [46,1], [67,43], [49,61], [53,88]
sorted: [46,1], [68,24], [49,61], [53,88]
sorted: [46,1], [68,24], [49,61], [69,71]
sorted: [46,1], [68,24], [76,53], [69,71]
sorted: [46,1], [87,24], [76,53], [69,71]
sorted: [46,1], [87,24], [92,30], [69,71]
sorted: [46,1], [87,24], [92,30], [69,71], [94,88]
sorted: [46,1], [87,24], [95,26], [69,71], [94,88]
LongestIncreasingPairs Len_Greedy_LowerBound for "[9,61], [19,34], [25,48], [29,88], [36,34], [45,95], [45,2], [46,1], [49,61], [49,48], [53,88], [64,47], [67,43], [68,24], [69,71], [76,53], [87,24], [92,30], [94,88], [95,26]": 5
LongestIncreasingPairs Len_DP1D_Quadratic for "[9,61], [19,34], [25,48], [29,88], [36,34], [45,95], [45,2], [46,1], [49,61], [49,48], [53,88], [64,47], [67,43], [68,24], [69,71], [76,53], [87,24], [92,30], [94,88], [95,26]": see LISPairs.Len_DP1D_Quadratic:
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 2, 2, 1, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 2, 2, 4, 1, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 2, 2, 4, 3, 1, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 2, 2, 4, 3, 2, 1, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 2, 2, 4, 3, 2, 3, 1, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 2, 2, 4, 3, 2, 3, 5, 1
1, 1, 2, 3, 1, 4, 1, 1, 3, 2, 4, 2, 2, 2, 4, 3, 2, 3, 5, 3
LISPairs Len_DP1D_Quadratic for "[9,61], [19,34], [25,48], [29,88], [36,34], [45,95], [45,2], [46,1], [49,61], [49,48], [53,88], [64,47], [67,43], [68,24], [69,71], [76,53], [87,24], [92,30], [94,88], [95,26]": 5 ([19,34], [25,48], [49,61], [69,71], [94,88])
sorted: [7,13]
sorted: [7,13], [11,24]
sorted: [7,13], [11,24], [19,36]
sorted: [7,13], [11,24], [19,36], [22,92]
sorted: [7,13], [27,14], [19,36], [22,92]
sorted: [7,13], [27,14], [29,36], [22,92]
sorted: [7,13], [27,14], [29,36], [31,55]
sorted: [7,13], [27,14], [29,36], [42,52]
sorted: [7,13], [27,14], [29,36], [45,37]
sorted: [7,13], [27,14], [50,23], [45,37]
sorted: [7,13], [27,14], [50,23], [45,37], [56,55]
sorted: [7,13], [27,14], [50,23], [45,37], [56,55], [61,69]
sorted: [7,13], [27,14], [50,23], [65,37], [56,55], [61,69]
sorted: [7,13], [27,14], [50,23], [66,32], [56,55], [61,69]
sorted: [7,13], [27,14], [50,23], [66,32], [79,35], [61,69]
sorted: [7,13], [27,14], [80,22], [66,32], [79,35], [61,69]
sorted: [7,13], [27,14], [80,22], [66,32], [79,35], [86,67]
sorted: [7,13], [27,14], [80,22], [66,32], [79,35], [86,67], [87,82]
sorted: [7,13], [27,14], [80,22], [66,32], [79,35], [87,59], [87,82]
sorted: [7,13], [27,14], [80,22], [66,32], [79,35], [87,59], [87,82], [94,93]
LongestIncreasingPairs Len_Greedy_LowerBound for "[7,13], [11,24], [19,36], [22,92], [27,14], [29,36], [31,55], [42,52], [45,37], [50,23], [56,55], [61,69], [65,37], [66,32], [79,35], [80,22], [86,67], [87,82], [87,59], [94,93]": 8
LongestIncreasingPairs Len_DP1D_Quadratic for "[7,13], [11,24], [19,36], [22,92], [27,14], [29,36], [31,55], [42,52], [45,37], [50,23], [56,55], [61,69], [65,37], [66,32], [79,35], [80,22], [86,67], [87,82], [87,59], [94,93]": see LISPairs.Len_DP1D_Quadratic:
1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 4, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 4, 4, 1, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 4, 4, 5, 1, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 4, 4, 5, 3, 1, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 4, 4, 5, 3, 6, 1, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 4, 4, 5, 3, 6, 7, 1, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 4, 4, 5, 3, 6, 7, 6, 1
1, 2, 3, 4, 2, 3, 4, 4, 4, 3, 5, 6, 4, 4, 5, 3, 6, 7, 6, 8
LISPairs Len_DP1D_Quadratic for "[7,13], [11,24], [19,36], [22,92], [27,14], [29,36], [31,55], [42,52], [45,37], [50,23], [56,55], [61,69], [65,37], [66,32], [79,35], [80,22], [86,67], [87,82], [87,59], [94,93]": 8 ([7,13], [11,24], [19,36], [42,52], [56,55], [61,69], [87,82], [94,93])
sorted: [17,7]
sorted: [17,7], [24,12]
sorted: [17,7], [24,12], [25,56]
sorted: [17,7], [24,12], [28,52]
sorted: [17,7], [24,12], [28,52], [32,93]
sorted: [17,7], [24,12], [28,52], [41,85]
sorted: [17,7], [41,10], [28,52], [41,85]
sorted: [17,7], [41,10], [28,52], [41,85], [45,93]
sorted: [17,7], [41,10], [47,11], [41,85], [45,93]
sorted: [17,7], [41,10], [47,11], [55,67], [45,93]
sorted: [17,7], [41,10], [47,11], [55,23], [45,93]
sorted: [17,7], [41,10], [47,11], [55,23], [67,46]
sorted: [17,7], [41,10], [47,11], [55,23], [67,46], [73,87]
sorted: [17,7], [41,10], [47,11], [55,23], [67,46], [77,47]
sorted: [77,0], [41,10], [47,11], [55,23], [67,46], [77,47]
sorted: [77,0], [41,10], [47,11], [55,23], [67,46], [77,47], [81,93]
sorted: [77,0], [41,10], [47,11], [81,13], [67,46], [77,47], [81,93]
sorted: [77,0], [41,10], [47,11], [81,13], [67,46], [77,47], [81,93]
sorted: [77,0], [41,10], [47,11], [81,13], [92,19], [77,47], [81,93]
sorted: [77,0], [41,10], [47,11], [81,13], [92,19], [95,24], [81,93]
LongestIncreasingPairs Len_Greedy_LowerBound for "[17,7], [24,12], [25,56], [28,52], [32,93], [41,85], [41,10], [45,93], [47,11], [55,67], [55,23], [67,46], [73,87], [77,47], [77,0], [81,93], [81,13], [81,13], [92,19], [95,24]": 7
LongestIncreasingPairs Len_DP1D_Quadratic for "[17,7], [24,12], [25,56], [28,52], [32,93], [41,85], [41,10], [45,93], [47,11], [55,67], [55,23], [67,46], [73,87], [77,47], [77,0], [81,93], [81,13], [81,13], [92,19], [95,24]": see LISPairs.Len_DP1D_Quadratic:
1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 6, 1, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 6, 6, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 6, 6, 1, 1, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 6, 6, 1, 7, 1, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 6, 6, 1, 7, 4, 1, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 6, 6, 1, 7, 4, 4, 1, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 6, 6, 1, 7, 4, 4, 5, 1
1, 2, 3, 3, 4, 4, 2, 5, 3, 4, 4, 5, 6, 6, 1, 7, 4, 4, 5, 6
LISPairs Len_DP1D_Quadratic for "[17,7], [24,12], [25,56], [28,52], [32,93], [41,85], [41,10], [45,93], [47,11], [55,67], [55,23], [67,46], [73,87], [77,47], [77,0], [81,93], [81,13], [81,13], [92,19], [95,24]": 7 ([17,7], [41,10], [47,11], [55,23], [67,46], [73,87], [81,93])
sorted: [0,54]
sorted: [0,54], [17,75]
sorted: [18,12], [17,75]
sorted: [27,2], [17,75]
sorted: [27,2], [38,69]
sorted: [27,2], [45,23]
sorted: [27,2], [45,23], [65,81]
sorted: [27,2], [65,3], [65,81]
sorted: [27,2], [65,3], [67,32]
sorted: [27,2], [65,3], [67,32], [71,54]
sorted: [27,2], [65,3], [67,32], [71,54], [78,89]
sorted: [27,2], [65,3], [67,32], [79,41], [78,89]
sorted: [27,2], [65,3], [80,25], [79,41], [78,89]
sorted: [27,2], [65,3], [80,25], [82,29], [78,89]
sorted: [27,2], [65,3], [80,25], [82,29], [84,39]
sorted: [27,2], [65,3], [87,12], [82,29], [84,39]
sorted: [27,2], [65,3], [87,12], [82,29], [84,39], [90,42]
sorted: [27,2], [65,3], [87,12], [82,29], [84,39], [90,42], [93,77]
sorted: [27,2], [65,3], [87,12], [96,24], [84,39], [90,42], [93,77]
sorted: [27,2], [65,3], [87,12], [96,24], [84,39], [90,42], [98,69]
LongestIncreasingPairs Len_Greedy_LowerBound for "[0,54], [17,75], [18,12], [27,2], [38,69], [45,23], [65,81], [65,3], [67,32], [71,54], [78,89], [79,41], [80,25], [82,29], [84,39], [87,12], [90,42], [93,77], [96,24], [98,69]": 7
LongestIncreasingPairs Len_DP1D_Quadratic for "[0,54], [17,75], [18,12], [27,2], [38,69], [45,23], [65,81], [65,3], [67,32], [71,54], [78,89], [79,41], [80,25], [82,29], [84,39], [87,12], [90,42], [93,77], [96,24], [98,69]": see LISPairs.Len_DP1D_Quadratic:
1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 1, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 3, 1, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 3, 4, 1, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 3, 4, 5, 1, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 3, 4, 5, 3, 1, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 3, 4, 5, 3, 6, 1, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 3, 4, 5, 3, 6, 7, 1, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 3, 4, 5, 3, 6, 7, 4, 1
1, 2, 1, 1, 2, 2, 3, 2, 3, 4, 5, 4, 3, 4, 5, 3, 6, 7, 4, 7
LISPairs Len_DP1D_Quadratic for "[0,54], [17,75], [18,12], [27,2], [38,69], [45,23], [65,81], [65,3], [67,32], [71,54], [78,89], [79,41], [80,25], [82,29], [84,39], [87,12], [90,42], [93,77], [96,24], [98,69]": 7 ([18,12], [45,23], [80,25], [82,29], [84,39], [90,42], [93,77])
sorted: [17,92]
sorted: [27,77]
sorted: [36,35]
sorted: [36,35], [38,66]
sorted: [36,35], [43,48]
sorted: [36,35], [43,48], [45,70]
sorted: [36,35], [43,48], [54,63]
sorted: [36,35], [43,48], [54,63], [57,85]
sorted: [58,12], [43,48], [54,63], [57,85]
sorted: [58,12], [61,16], [54,63], [57,85]
sorted: [58,12], [61,16], [54,63], [57,85], [67,90]
sorted: [58,12], [61,16], [70,62], [57,85], [67,90]
sorted: [58,12], [61,16], [70,62], [76,63], [67,90]
sorted: [58,12], [77,15], [70,62], [76,63], [67,90]
sorted: [58,12], [77,15], [70,62], [76,63], [79,67]
sorted: [58,12], [77,15], [70,62], [76,63], [79,67], [84,89]
sorted: [58,12], [77,15], [92,36], [76,63], [79,67], [84,89]
sorted: [92,0], [77,15], [92,36], [76,63], [79,67], [84,89]
sorted: [92,0], [77,15], [92,36], [76,63], [79,67], [95,72]
sorted: [92,0], [77,15], [92,36], [76,63], [79,67], [99,71]
LongestIncreasingPairs Len_Greedy_LowerBound for "[17,92], [27,77], [36,35], [38,66], [43,48], [45,70], [54,63], [57,85], [58,12], [61,16], [67,90], [70,62], [76,63], [77,15], [79,67], [84,89], [92,36], [92,0], [95,72], [99,71]": 6
LongestIncreasingPairs Len_DP1D_Quadratic for "[17,92], [27,77], [36,35], [38,66], [43,48], [45,70], [54,63], [57,85], [58,12], [61,16], [67,90], [70,62], [76,63], [77,15], [79,67], [84,89], [92,36], [92,0], [95,72], [99,71]": see LISPairs.Len_DP1D_Quadratic:
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 4, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 4, 2, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 4, 2, 5, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 4, 2, 5, 6, 1, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 4, 2, 5, 6, 3, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 4, 2, 5, 6, 3, 1, 1, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 4, 2, 5, 6, 3, 1, 6, 1
1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 5, 3, 4, 2, 5, 6, 3, 1, 6, 6
LISPairs Len_DP1D_Quadratic for "[17,92], [27,77], [36,35], [38,66], [43,48], [45,70], [54,63], [57,85], [58,12], [61,16], [67,90], [70,62], [76,63], [77,15], [79,67], [84,89], [92,36], [92,0], [95,72], [99,71]": 6 ([36,35], [43,48], [70,62], [76,63], [79,67], [84,89])
sorted: [2,70]
sorted: [3,14]
sorted: [3,14], [8,93]
sorted: [3,14], [9,82]
sorted: [3,14], [10,19]
sorted: [19,8], [10,19]
sorted: [19,2], [10,19]
sorted: [19,2], [10,19], [22,34]
sorted: [19,2], [10,19], [22,34], [24,83]
sorted: [19,2], [10,19], [22,34], [26,65]
sorted: [19,2], [10,19], [22,34], [26,65], [27,99]
sorted: [19,2], [10,19], [22,34], [33,59], [27,99]
sorted: [19,2], [10,19], [34,26], [33,59], [27,99]
sorted: [19,2], [10,19], [34,26], [33,59], [51,89]
sorted: [19,2], [10,19], [34,26], [61,33], [51,89]
sorted: [19,2], [63,4], [34,26], [61,33], [51,89]
sorted: [19,2], [63,4], [34,26], [61,33], [51,89], [71,93]
sorted: [19,2], [63,4], [34,26], [61,33], [88,36], [71,93]
sorted: [19,2], [63,4], [92,25], [61,33], [88,36], [71,93]
sorted: [19,2], [63,4], [92,25], [61,33], [88,36], [97,64]
LongestIncreasingPairs Len_Greedy_LowerBound for "[2,70], [3,14], [8,93], [9,82], [10,19], [19,8], [19,2], [22,34], [24,83], [26,65], [27,99], [33,59], [34,26], [51,89], [61,33], [63,4], [71,93], [88,36], [92,25], [97,64]": 6
LongestIncreasingPairs Len_DP1D_Quadratic for "[2,70], [3,14], [8,93], [9,82], [10,19], [19,8], [19,2], [22,34], [24,83], [26,65], [27,99], [33,59], [34,26], [51,89], [61,33], [63,4], [71,93], [88,36], [92,25], [97,64]": see LISPairs.Len_DP1D_Quadratic:
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 3, 1, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 3, 5, 1, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 3, 5, 4, 1, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 3, 5, 4, 2, 1, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 3, 5, 4, 2, 6, 1, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 3, 5, 4, 2, 6, 5, 1, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 3, 5, 4, 2, 6, 5, 3, 1
1, 1, 2, 2, 2, 1, 1, 3, 4, 4, 5, 4, 3, 5, 4, 2, 6, 5, 3, 6
LISPairs Len_DP1D_Quadratic for "[2,70], [3,14], [8,93], [9,82], [10,19], [19,8], [19,2], [22,34], [24,83], [26,65], [27,99], [33,59], [34,26], [51,89], [61,33], [63,4], [71,93], [88,36], [92,25], [97,64]": 6 ([3,14], [10,19], [22,34], [24,83], [51,89], [71,93])
sorted: [0,66]
sorted: [4,40]
sorted: [5,25]
sorted: [5,25], [15,82]
sorted: [5,25], [23,54]
sorted: [29,6], [23,54]
sorted: [29,6], [23,54], [32,67]
sorted: [29,6], [23,54], [32,67], [33,89]
sorted: [29,6], [41,23], [32,67], [33,89]
sorted: [29,6], [41,23], [44,66], [33,89]
sorted: [29,6], [41,23], [52,26], [33,89]
sorted: [29,6], [41,23], [52,26], [55,33]
sorted: [29,6], [41,23], [52,26], [55,33], [61,87]
sorted: [29,6], [41,23], [52,26], [55,33], [62,65]
sorted: [29,6], [68,18], [52,26], [55,33], [62,65]
sorted: [29,6], [68,18], [52,26], [77,32], [62,65]
sorted: [29,6], [68,18], [77,24], [77,32], [62,65]
sorted: [29,6], [68,18], [77,24], [80,25], [62,65]
sorted: [29,6], [68,18], [91,23], [80,25], [62,65]
sorted: [29,6], [97,12], [91,23], [80,25], [62,65]
LongestIncreasingPairs Len_Greedy_LowerBound for "[0,66], [4,40], [5,25], [15,82], [23,54], [29,6], [32,67], [33,89], [41,23], [44,66], [52,26], [55,33], [61,87], [62,65], [68,18], [77,32], [77,24], [80,25], [91,23], [97,12]": 5
LongestIncreasingPairs Len_DP1D_Quadratic for "[0,66], [4,40], [5,25], [15,82], [23,54], [29,6], [32,67], [33,89], [41,23], [44,66], [52,26], [55,33], [61,87], [62,65], [68,18], [77,32], [77,24], [80,25], [91,23], [97,12]": see LISPairs.Len_DP1D_Quadratic:
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 5, 1, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 5, 5, 1, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 5, 5, 2, 1, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 5, 5, 2, 4, 1, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 5, 5, 2, 4, 3, 1, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 5, 5, 2, 4, 3, 4, 1, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 5, 5, 2, 4, 3, 4, 3, 1
1, 1, 1, 2, 2, 1, 3, 4, 2, 3, 3, 4, 5, 5, 2, 4, 3, 4, 3, 2
LISPairs Len_DP1D_Quadratic for "[0,66], [4,40], [5,25], [15,82], [23,54], [29,6], [32,67], [33,89], [41,23], [44,66], [52,26], [55,33], [61,87], [62,65], [68,18], [77,32], [77,24], [80,25], [91,23], [97,12]": 5 ([29,6], [41,23], [52,26], [55,33], [61,87])
<===LongestIncreasingPairs
*/
#endif